name: Terraform Pipeline

on:
  push:
    branches:
      - main
    paths:
      - '_modules/**'
      - 'dev/**'
      - 'qa/**'
      - 'stage/**'
      - 'prod/**'
  pull_request:
    branches:
      - main
    paths:
      - '_modules/**'
      - 'dev/**'
      - 'qa/**'
      - 'stage/**'
      - 'prod/**'

permissions:
  id-token: write
  contents: read

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Get changed files
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            _modules/**
            dev/**
            qa/**
            stage/**
            prod/**

      # Dynamically detect changed folders
      - name: Set matrix for changed folders
        id: set-matrix
        run: |
          changed_folders=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | grep -oE '^(_modules/[^/]+|dev|qa|stage|prod)/' | sort -u | jq -R . | jq -s .)
          if [ -z "$changed_folders" ] || [ "$changed_folders" = "[]" ]; then
            changed_folders='[]'
          fi
          echo "matrix=$(echo "$changed_folders" | jq -c '{folders: .}')" >> $GITHUB_OUTPUT
        shell: bash

  terraform-plan:
    needs: detect-changes
    if: needs.detect-changes.outputs.matrix != '{"folders":[]}'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder: ${{ fromJson(needs.detect-changes.outputs.matrix).folders }}
    defaults:
      run:
        working-directory: ${{ matrix.folder }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
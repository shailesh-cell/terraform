name: Plan-Apply Pipeline

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  check_changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.detect_changes.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for git diff to compare with origin/main

      - name: Detect Terraform changes
        id: detect_changes
        run: |
          CHANGED_DIRS=$(git diff origin/main HEAD --name-only -- '*.tf' | grep -v '^_modules' | awk -F'/' 'NF > 1 {print $1}' | sort | uniq)
          if [ -z "$CHANGED_DIRS" ]; then
            echo "No Terraform changes detected."
            echo "matrix={}" >> $GITHUB_OUTPUT
            exit 0
          fi
          JSON_MATRIX="{"
          for dir in $CHANGED_DIRS; do
            JSON_MATRIX+="\"$dir\":{\"directoryPath\":\"$dir\"},"
          done
          JSON_MATRIX=${JSON_MATRIX%,}
          JSON_MATRIX+="}"
          echo "Changed directories: $CHANGED_DIRS"
          echo "matrix=$JSON_MATRIX" >> $GITHUB_OUTPUT
        shell: bash

  tf_plan:
    runs-on: ubuntu-latest
    needs: check_changes
    if: ${{ needs.check_changes.outputs.matrix != '{}' }}
    strategy:
      matrix: ${{ fromJson(needs.check_changes.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ matrix.directoryPath }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ matrix.directoryPath }}

      - name: Terraform Plan
        run: terraform plan
        working-directory: ${{ matrix.directoryPath }}
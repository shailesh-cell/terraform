name: Terraform Plan Workflow

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  detect-changes:
    name: Detect Changed Terraform Directories
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect Changed Terraform Directories
        id: set-matrix
        run: |
          CHANGED_DIRS=$(git diff HEAD^ HEAD --name-only -- '*.tf' | xargs -n1 dirname | sort | uniq)

          if [ -z "$CHANGED_DIRS" ]; then
            echo "No .tf changes found. Using default directory."
            MATRIX_JSON='[{"directoryPath":"."}]'
          else
            MATRIX_JSON="["
            for dir in $CHANGED_DIRS; do
              MATRIX_JSON+="{\"directoryPath\":\"$dir\"},"
            done
            MATRIX_JSON="${MATRIX_JSON%,}" # remove trailing comma
            MATRIX_JSON+="]"
          fi

          echo "matrix=$MATRIX_JSON" >> $GITHUB_OUTPUT
          echo "Matrix: $MATRIX_JSON"

  terraform-plan:
    name: Terraform Plan
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
    defaults:
      run:
        working-directory: ${{ matrix.directoryPath }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Azure Login via OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Debug Working Directory
        run: |
          echo "PWD: $(pwd)"
          ls -la

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan